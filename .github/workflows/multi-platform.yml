name: Build Eclipse

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: Windows
          os: windows-latest
          build-type: RelWithDebInfo

        - name: macOS
          os: macos-latest

        - name: Android32
          os: ubuntu-latest
          target: Android32

        - name: Android64
          os: ubuntu-latest
          target: Android64

        - name: iOS
          os: macos-latest
          target: iOS

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Build the mod
        uses: geode-sdk/build-geode-mod@main
        with:
          bindings: EclipseMenu/bindings
          bindings-ref: main
          # sdk: nightly
          combine: true
          export-pdb: true
          target: ${{ matrix.config.target }}
          build-config: ${{ matrix.config.build-type || 'Release' }}

  package:
    name: Package builds
    runs-on: ubuntu-latest
    needs: ['build']

    steps:
      - uses: geode-sdk/build-geode-mod/combine@main
        id: build

      - uses: actions/upload-artifact@v4
        with:
          name: Build Output
          path: ${{ steps.build.outputs.build-output }}

      - name: Check if has nightly webhook
        id: check
        if: github.ref == 'refs/heads/main'
        run: echo "has-nightly-webhook=${{ secrets.NIGHTLY_WEBHOOK != '' }}" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4
        if: ${{ steps.check.outputs.has-nightly-webhook == 'true' }}

      - name: Get commit messages
        id: commit
        if: ${{ steps.check.outputs.has-nightly-webhook == 'true' }}
        run: |
          echo "commit-message=$(git log -1 --pretty=format:"%s" | head -n 1)" >> $GITHUB_OUTPUT
          # echo "commit-message-full=$(echo $COMMIT_MESSAGE | tail -n +2)" >> $GITHUB_OUTPUT # Bash is weird, this doesn't work
          echo "build-color=#$(git log -1 --pretty=format:"%h" | cut -c 1-6)" >> $GITHUB_OUTPUT
